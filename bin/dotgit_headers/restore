#! /bin/bash

# Part of dotgit

function restore
{
	if [ -f "$REPO/hard" ]; then hardrestore; return; fi

	cleanhome
	echo "Commencing unencrypted repo linking..."
	homelink "$DOTFILES" "$1" "${NORMFILES[@]}"
	echo "Commencing encrypted repo linking..."
	homelink "$DMZ" "$1" "${CRYPTFILES[@]}"
}

function homelink
{
	FILELIST=${@:3}
	CDFILES=$1

	cd "$CDFILES"
	owner=$2

	if [ -z "$owner" ]; then
		for i in ${FILELIST[@]}; do
			if [[ $i =~ : ]]; then continue; fi
			if [ "$(dirname "$i")" != "." ]; then
				mkdir -p "$(dirname "$HOME/$i")"
			fi

			if [ ! -f "$CDFILES/common/$i" ]; then
				echo "-->Can't link $i (its either not yet decrypted or it has"\
					"not been copied to the repository yet)"
				continue
			fi

			lnconf "$CDFILES/common/$i" "$HOME/$i" "$i"
		done
		owner=$HOSTNAME
	fi

	for i in ${FILELIST[@]}; do
		if ! [[ $i =~ $owner ]]; then continue; fi
		ownrs=($(echo $i | rev | sed s/\:.*// | sed s/\,/\ /g | rev))
		ownrs=($(for z in ${ownrs[@]}; do echo $z; done | sort))
		filename=$(echo $i | sed s/\:.*//);

		if [ ! -f "$CDFILES/${ownrs[0]}/$filename" ]; then
			echo "-->Can't link $filename (its either not yet decrypted or it"\
				"has not been copied to the repository yet)"
			continue
		fi

		if [ "$(dirname "$filename")" != "." ]; then
			mkdir -p "$(dirname "$HOME/$filename")"
		fi

		lnconf "$CDFILES/${ownrs[0]}/$filename" "$HOME/$filename" \
		"$filename"
	done
}

function hardrestore
{
	echo "Commencing hard restore of normal files..."
	copytohome "$DOTFILES" "$1" "${NORMFILES[@]}"
	echo "Commencing hard restore of encrypted files..."
	copytohome "$DMZ" "$1" "${CRYPTFILES[@]}"
}

function copytohome
{
	FILELIST=${@:3}
	CDFILES=$1
	category=$2

	cd "$CDFILES"

	if [ -z "$category" ]; then
		if [ -d common ]; then
			cd common
			for i in $(find . -not -type d); do
				i="$(echo $i | cut -c 3-)"
				if [[ $i =~ .hash ]]; then continue; fi
				if ! echo "${FILELIST[@]}" | grep -q "$i"; then continue; fi
				pstatus "$i" "common" "Copying"
				if [ -f "$HOME/$i" ]; then
					rm "$HOME/$i"
				fi
				cp --parents "$i" "$HOME"
			done
			cd ..
		fi

		if [ -d "$HOSTNAME" ]; then
			cd "$HOSTNAME"
		else
			echo "Folder for $HOSTNAME not found..."
			return
		fi

		for i in $(find . -not -type d); do
			i="$(echo $i | cut -c 3-)"
			if [[ $i =~ .hash ]]; then continue; fi
			if ! echo ${FILELIST[@]} | grep -q "$i.*$HOSTNAME"; then
				continue; fi
			pstatus "$i" "$HOSTNAME" "Copying"
			if [ -f "$HOME/$i" ]; then
				rm "$HOME/$i"
			fi
			cp -L --parents "$i" "$HOME"
		done
	else
		if [ -d "$category" ]; then
			cd "$category"
		else
			echo "Category $category not found..."
			return
		fi

		for i in $(find . -not -type d); do
			i="$(echo $i | cut -c 3-)"
			if [[ $i =~ .hash ]]; then continue; fi
			if ! echo ${FILELIST[@]} | grep -q "$i.*$category"; then
				continue; fi
			if ! echo "${FILELIST[@]}" | grep -q "$i"; then continue; fi
			pstatus "$i" "$category" "Copying"
			if [ -f "$HOME/$i" ]; then
				rm "$HOME/$i"
			fi
			cp -L --parents "$i" "$HOME"
		done
	fi

	echo "Finished copying..."
}

