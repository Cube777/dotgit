#! /bin/bash

declare -a DG_DIFF_T
declare -a DG_DIFF_F

function init_diff
{
	git add --all
	IFS=$'\n'
	while read -r line; do
		IFS=$' '
		local -a l=($line)
		[[ ! ${l[1]} =~ ^$DG_DFDIR* ]] && continue
		[[ ${l[1]} =~ .*\.hash ]] && continue

		case "${l[0]}" in
			"A")DG_DIFF_T=(${DG_DIFF_T[@]} "added");;
			"M")DG_DIFF_T=(${DG_DIFF_T[@]} "modified");;
			"D")DG_DIFF_T=(${DG_DIFF_T[@]} "deleted");;
			*)errecho "Unknown git change \"${l[0]}\" - ${l[1]}"; continue;;
		esac;

		DG_DIFF_F=(${DG_DIFF_F[@]} "${l[1]#$DG_DFDIR\/}")
	done <<< "$(git status --porcelain)"
	unset line

	git reset -q
}

function print_diff
{
	init_diff

	IFS=$'\n'
	for index in $(seq 1 ${#DG_DIFF_T[@]}); do
		index=$((index - 1))
		echo "${DG_DIFF_T[$index]^} ${DG_DIFF_F[$index]}"
	done
	unset index

	local f
	local -a c

	local str
	IFS=$'\n'
	for index in $(seq 1 ${#FN[@]}); do
		index=$((index - 1))

		[[ ${FE[$index]} -ne 1 ]] && continue

		f=${FN[$index]}
		IFS=$',' c=(${FC[$index]})

		for cat in "${c[@]}"; do
			[ ! -f "$REPO/$DG_DMZ/$cat/$f" ] && continue

			if [ ! -f "$REPO/$DG_DFDIR/$cat/$f" ]; then
				str="$str\nAdded $cat/$f"
				continue
			fi

			[ -h "$REPO/$DG_DFDIR/$cat/$f" ] && continue

			local hashed
			local hashfl
			hashed=$($DG_HASH "$REPO/$DG_DMZ/$cat/$f")
			hashed=${hashed% *}
			hashfl=$(cat "$REPO/$DG_DFDIR/$cat/$f.hash")

			[[ $hashed != "$hashfl" ]] && str="$str\nModified $cat/$f"
		done
		unset cat
	done

	[ "$str" ] && echo -e "\nUnencrypted changes:\n$str"
	unset index
}

[[ ! $DG_START ]] && echo "Do not source this directly, it is used by dotgit"
