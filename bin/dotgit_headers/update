#! /bin/bash

function update
{
	# shellcheck disable=SC2155
	verecho "\nEntering update"
	if ! cd "$REPO/$DG_DFDIR"; then
		echo "Unable to enter dotfiles directory"
		exit 1
	fi
	verecho "Entered dotfiles directory"

	local f
	local -a c
	local e
	IFS=$'\n'
	for index in $(seq 1 ${#FN[@]}); do
		index=$((index - 1))

		f=${FN[$index]}
		IFS=$','
		c=(${FC[$index]})
		e=${FE[$index]}

		verecho "$(levecho 1 "Updating \"$f\" - ${c[*]} - $e")"

		local found=0
		for i in "${CTG[@]}"; do
			for k in "${c[@]}"; do
				if [[ $k == "$i" ]]; then
					found=1;
					break;
				fi
			done
			[[ $found -eq 1 ]] && break
		done
		unset i
		unset k

		if [[ $found -ne 1 ]]; then
			verecho "$(levecho 2 "Not in specified categories. Skipping...")"
			continue
		fi

		if [[ ! "$1" == "sym" ]]; then
			# shellcheck disable=SC2164
			cd "$HOME"

			if [ ! -f "$f" ]; then
				verecho "$(levecho 2 "Cannot find file in home folder.")"
				continue
			fi

			for i in "${c[@]}"; do
				verecho "$(levecho 2 "Copying to category $i")"
				mkdir -p "$REPO/$DG_DFDIR/$i"
				cp --parents "$f" "$REPO/$DG_DFDIR/$i"
			done
			unset i

			continue
		fi

		found=0
		local -i fsym=0
		local fcat=
		for i in "${c[@]}"; do
			if [ -a  "$i/$f" ]; then
				found=1
				fcat=$i
				verecho "$(levecho 2 "Found in $i")"

				if [ -h "$i/$f" ] ||  [ "$i" != "${c[0]}" ]; then
					verecho "$(levecho 3 "Invalid root file")"
					fsym=1
				fi
				break
			fi
		done
		unset i

		if [ $found -eq 0 ]; then
			verecho "$(levecho 2 "Not found in repo, adding to repo")"
			# shellcheck disable=SC2164
			cd "$HOME"

			if [ ! -f "$f" ]; then
				verecho "$(levecho 3 "Cannot find file in home folder.")"
				continue
			fi

			mkdir -p "$REPO/$DG_DFDIR/${c[0]}"
			cp --parents "$f" "$REPO/$DG_DFDIR/${c[0]}"
			verecho "$(levecho 3 "Root file added to repo")"
		elif [[ $fsym -eq 1 ]]; then
			verecho "$(levecho 2 "Finding previous root file")"
			# shellcheck disable=SC2155
			local root=$(readlink -f "$REPO/$DG_DFDIR/$fcat/$f")

			if [ ! -f "$root" ]; then
				verecho "$(levecho 3 "Cannot find root file," \
					"trying to find file in home folder")"
				if [ ! -f "$HOME/$f" ]; then
					verecho "$(levecho "Cannot find file in home folder.")"
					continue
				fi
				root="$HOME/$f"
			fi

			verecho "$(levecho 2 "Creating new root - ${c[0]}")"

			mkdir -p "$(dirname "$REPO/$DG_DFDIR/${c[0]}/$f")"
			rm "$REPO/$DG_DFDIR/${c[0]}/$f" > /dev/null 2>&1
			cp "$root" "$REPO/$DG_DFDIR/${c[0]}/$f"

			for i in "${c[@]:1}"; do
				rm "$REPO/$DG_DFDIR/$i/$f" > /dev/null 2>&1
			done
			unset i

			verecho "$(levecho 3 "Root file added to repo")"
		fi

		for i in "${c[@]:1}"; do
			mkdir -p "$(dirname "$REPO/$DG_DFDIR/$i/$f")"
			# Link other categories to "root" file (first in cat arr)
			if [ ! -f "$REPO/$DG_DFDIR/$i/$f" ]; then
				ln -rs "$REPO/$DG_DFDIR/${c[0]}/$f" "$REPO/$DG_DFDIR/$i/$f"
				verecho "$(levecho 3 "Co-category \"$i\" linked to root")"
			fi
		done
		unset i
	done

	unset index
}

[[ ! $DG_START ]] && echo "Do not source this directly, it is used by dotgit"
