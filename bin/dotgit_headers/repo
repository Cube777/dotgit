#! /bin/bash
# Part of dotgit

function errecho
{
	>&2 echo "$@"
}

function verecho
{
	[[ $DG_VERBOSE -eq 0 ]] && echo -e "$@"
}

function levecho
{
	local tmp=
	while [[ ${#tmp} -lt "$1" ]]; do
		tmp=$(echo -n "$tmp ")
	done
	tmp=$(echo -n "$tmp>")

	shift
	echo -n "$tmp $*"
}

function init
{
	if ! cd "$REPO"; then
		errecho "Unable to enter repo."
		exit 1
	fi

	touch "$FILELIST"
	touch "$CRYPTLIST"

	if [ ! -d ".git" ]; then
		git init
		git checkout -b master
		git add --all
		git commit -m "Initial dotgit commit"
	fi
}

function safety_checks
{
	if [[ $REPO == "$HOME" ]]; then
		errecho "Do not run dotgit in your home directory, run it in your" \
			"dotfiles repository"
		exit 1
	fi

	if [ ! -d ".git" ]; then
		errecho "This does not appear to be a git directory. Aborting..."
		exit 1
	fi

	if [ ! -f "$FILELIST" ]; then
		errecho "Cannot locate filelist. Please make sure this repository" \
			"was initialised by dotgit."
		exit 1
	fi

	if [ ! -f "$CRYPTLIST" ]; then
		errecho "Cannot locate cryptlist. Please make sure this repository" \
			"was initialised by dotgit."
		exit 1
	fi

	if ! mkdir -p "$REPO/$DG_DFDIR"; then
		"Unable to create dotfiles dir"
		exit 1
	fi
}

function init_flists
{
	local n=0

	IFS=":"
	for cur in $FILELIST $CRYPTLIST; do
		while read -r line; do
			local l=($line)
			FN=(${FN[@]} ${l[0]})
			FC=(${FC[@]} ${l[1]:-"common"})
			FE=(${FE[@]} $n)
		done < "$cur"
		n=1
	done

	unset line
	unset cur
}

[[ ! $DG_START ]] && echo "Do not source this directly, it is used by dotgit"
